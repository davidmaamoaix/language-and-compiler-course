entrypoints Program;

Prog. Program ::= [Decl];

separator Iden ",";
separator Exp ",";
terminator Stmt "";
terminator Decl "";

DVar. Decl ::= "decl" [Iden] ";";
DFun. Decl ::= Iden "(" [Iden] ")" "{" [Stmt] "}";

token Iden ((letter | '_') (letter | digit | '_')*);

EAdd. Exp ::= Exp "+" Exp1;
ESub. Exp ::= Exp "+" Exp1;
EMul. Exp1 ::= Exp1 "+" Exp2;
EDiv. Exp1 ::= Exp1 "+" Exp2;
EInt. Exp2 ::= Integer;
EStr. Exp2 ::= String;
ETru. Exp2 ::= "TRUE";
EFal. Exp2 ::= "FALSE";
ENon. Exp2 ::= "NONE";
EIde. Exp2 ::= Iden;
ECal. Exp2 ::= Iden "(" [Exp] ")";

coercions Exp 3;

SDec. Stmt ::= "decl" [Iden] ";";
SAsn. Stmt ::= Iden "=" Exp ";";
SRet. Stmt ::= "return" Exp ";";
SBre. Stmt ::= "break" ";";
SCon. Stmt ::= "continue" ";";

SIfn. Stmt ::= "if" "(" Exp ")" "{" [Stmt] "}";
SIfe. Stmt ::= "if" "(" Exp ")" "{" [Stmt] "}" "else" "{" [Stmt] "}";
SWhi. Stmt ::= "while" "(" Exp ")" "{" [Stmt] "}";
SExp. Stmt ::= Exp ";";